{"version":3,"sources":["minimaterial.js","button/minimaterial-button.js","checkbox/minimaterial-checkbox.js","input/minimaterial-input.js","loader/minimaterial-loader.js","pagination/minimaterial-pagination-control.js","pagination/minimaterial-pagination-search.js","pagination/minimaterial-pagination.js","snackbar/snackbar.js","switch/minimaterial-switch.js","tabbed/minimaterial-tab.js","tabbed/minimaterial-tabbed.js"],"names":["filtrar","datos","filtro","busqueda","undefined","angular","forEach","fila","key","esIgualFn","push","propiedad","isString","toLowerCase","length","isNumber","indexOf","getPaginas","size","pag","Math","ceil","miniapp","module","num","n","Number","isNaN","service","Primary","color","Array","prototype","filter","input","inicio","slice","$injector","registerMetodos","this","page_id","variable","set","id","get","getDataNotation","getSizeNotation","getPagesNotation","getDataLengthNotation","getCurrentNotation","getNextNotation","getBeforeNotation","getSearchNotation","instantiate","directive","$compile","terminal","scope","transclude","replace","template","restrict","compile","tElement","tAttrs","elemento","attrs","modelo","ngModel","label","element","replaceWith","$parse","multiElement","tipo","type","estilo","style","placeholder","extraAttrs","search","paginationSearch","assign","value","min","max","step","$watch","newvalue","currentvalue","console","log","required","readonly","append","textarea","firstChild","onkeyup","evt","height","scrollHeight","onkeydown","ancho","width","alto","stroke","strokeWidth","$paginationRegister","priority","registro","attr","atributos","dataNotation","controls","actual","iElement","iAttrs","elementName","localName","atributo","removeAttr","paginas","resultados","getVarname","RepeatValue","split","pageCurrent","pageSize","pages","dataLength","nextPage","beforePage","isDefined","data","CreateSnackbar","tpl","wrapper","addClass","setTimeout","time","remove","CreateStyle","sty","body","document","success","message","info","warning","error","setTime","tiempo","setPosition","position","require","href","class","link","tabbed","on","preventDefault","getAttribute","selectTab","addTab","controller","$scope","tabs","removeActive","tab","target","substr","getElementById","setAttribute","removeAttribute","name"],"mappings":"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","file":"angular-minimaterial.min.js","sourcesContent":["var miniapp = angular.module('ngMiniMaterial', []);\r\n\r\nangular.isNumber = function (num) {\r\n    var n = Number(num);\r\n    if (typeof (n) === 'number' && !isNaN(n)) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nminiapp.service('$ngMiniMaterialProvider', [function () {\r\n    var colorPrimary = \"\";\r\n    var colorPrimaryHover = \"\";\r\n\r\n    return {\r\n        Primary: function (color) {\r\n        }\r\n    }\r\n}]);\r\n\r\n\r\n\r\n// ======================================================\r\n// PAGINADOR\r\n// ======================================================\r\n\r\nArray.prototype.filtrar = function () {\r\n};\r\n\r\nfunction filtrar(datos, filtro) {\r\n    var busqueda = [];\r\n    if (filtro === '' || filtro === undefined) {\r\n        return datos;\r\n    }\r\n    angular.forEach(datos, function (fila) {\r\n        for (var key in fila) {\r\n            var propiedad = fila[key];\r\n            if (esIgualFn(propiedad, filtro)) { busqueda.push(fila); return; }\r\n        }\r\n    });\r\n    return busqueda;\r\n}\r\nfunction esIgualFn(propiedad, filtro) {\r\n    if (angular.isString(propiedad)) {\r\n        propiedad = propiedad.toLowerCase();\r\n    }\r\n    if (angular.isString(filtro)) {\r\n        filtro = filtro.toLowerCase();\r\n    }\r\n    if (angular.isString(propiedad) && propiedad.length < 100 && (angular.isString(filtro) || angular.isNumber(filtro))) {\r\n        if (propiedad.indexOf(filtro) > -1) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction getPaginas(datos, size) {\r\n    'use strict';\r\n    var pag = 0;\r\n    if (datos !== undefined) { pag = Math.ceil(datos.length / size); }\r\n    return pag;\r\n}\r\n\r\nminiapp.filter('startFrom', function () {\r\n    'use strict';\r\n    return function (input, inicio) {\r\n        if (input !== undefined) {\r\n            inicio = +inicio;\r\n            return input.slice(inicio);\r\n        } else {\r\n            // console.error(\"Modulo ng-pagination Filter startFrom Error\");\r\n            // throw \"Filter startFrom tiene variable \"+input;\r\n        }\r\n    };\r\n});\r\n\r\nminiapp.filter('pagFilter', function () {\r\n    'use strict';\r\n    return function (datos, filtro) {\r\n        var busqueda = [];\r\n        if (filtro === '' || filtro === undefined) {\r\n            return datos;\r\n        }\r\n        angular.forEach(datos, function (fila) {\r\n            for (var key in fila) {\r\n                var propiedad = fila[key];\r\n                if (esIgualFn(propiedad, filtro)) { busqueda.push(fila); return; }\r\n            }\r\n        });\r\n        return busqueda;\r\n    };\r\n});\r\n\r\nminiapp.service('$paginationRegister', ['$injector', function ($injector) {\r\n    'use strict';\r\n    function registerMetodos() {\r\n        this.page_id = '';\r\n        this.variable = '';\r\n    }\r\n    registerMetodos.prototype.set = function (id) {\r\n        this.page_id = 'pag_' + id;\r\n        this.variable = id;\r\n    };\r\n    registerMetodos.prototype.get = function () {\r\n        return this.page_id;\r\n    };\r\n    registerMetodos.prototype.getDataNotation = function () {\r\n        return this.variable;\r\n    };\r\n    registerMetodos.prototype.getSizeNotation = function () {\r\n        return this.page_id + '.pageSize';\r\n    };\r\n    registerMetodos.prototype.getPagesNotation = function () {\r\n        return this.page_id + '.pages';\r\n    };\r\n    registerMetodos.prototype.getDataLengthNotation = function () {\r\n        return this.page_id + '.dataLength';\r\n    };\r\n    registerMetodos.prototype.getCurrentNotation = function () {\r\n        return this.page_id + '.pageCurrent';\r\n    };\r\n\r\n    registerMetodos.prototype.getNextNotation = function () {\r\n        return this.page_id + '.nextPage';\r\n    };\r\n    registerMetodos.prototype.getBeforeNotation = function () {\r\n        return this.page_id + '.beforePage';\r\n    };\r\n    registerMetodos.prototype.getSearchNotation = function () {\r\n        return this.variable + '_search';\r\n    };\r\n\r\n    return function () {\r\n        return $injector.instantiate(registerMetodos);\r\n    };\r\n}]);","miniapp.directive('mmButton', ['$compile', function ($compile) {\r\n    return {\r\n        terminal: true, // si la directiva tiene internamente otras directivas\r\n        scope: false, // utilizar el scope actual\r\n        transclude: true, // Es para traspasar atributos y elementos internos de la directiva\r\n        replace: true, // reemplazar directiva por el template\r\n        template: '<button class=\"btn ripple\" ng-transclude></button>',\r\n        restrict: 'E' // solo elemento\r\n    }\r\n}]);","miniapp.directive('mmCheckbox', ['$compile', function ($compile) {\r\n    return {\r\n        terminal: true,\r\n        scope: false,\r\n        restrict: 'E',\r\n        compile: function (tElement, tAttrs) {\r\n            return function Linked(scope, elemento, attrs) {\r\n                var modelo = attrs.ngModel;\r\n                if (modelo === null || modelo === undefined || modelo === '') {\r\n                    throw \"mm-checkbox Requiere obligatoriamente ngModel\";\r\n                }\r\n\r\n                var label = attrs.label !== undefined ? attrs.label : '';\r\n\r\n                var template = angular.element('<div class=\"form-group\">' +\r\n                    '<div class=\"checkbox\">' +\r\n                    '<input id=\"chk_' + modelo + '\" ng-model=\"' + modelo + '\" type=\"checkbox\">' +\r\n                    '<label for=\"chk_' + modelo + '\">' + label + '</label>' +\r\n                    '</div>' +\r\n                    '</div>');\r\n\r\n                $compile(template)(scope);\r\n                elemento.replaceWith(template);\r\n            }\r\n        }\r\n    }\r\n}]);","miniapp.filter('secreto', [function () {\r\n    return function (input) {\r\n        if (input !== undefined && input !== null) {\r\n            return input.replace(/./gi, '*');\r\n        }\r\n        return \"\";\r\n    }\r\n}]);\r\n\r\nminiapp.directive('mmInput', ['$compile', '$parse', function ($compile, $parse) {\r\n    return {\r\n        // transclude: 'element',\r\n        // priority: 600,\r\n        multiElement: true,\r\n        terminal: true,\r\n        scope: false,\r\n        restrict: 'E',\r\n        // require: '?ngModel, ?ngIf',\r\n        compile: function (tElement, tAttrs) {\r\n            return function PostLink(scope, elemento, attrs) {\r\n                var tipo = attrs.type !== undefined ? attrs.type : 'text';\r\n                var estilo = attrs.style !== undefined ? attrs.style : '';\r\n                var placeholder = attrs.placeholder !== undefined ? attrs.placeholder : '';\r\n\r\n                var extraAttrs = \"\";\r\n\r\n                var modelo = attrs.ngModel;\r\n                var search = attrs.paginationSearch;\r\n                if ((modelo === null || modelo === undefined || modelo === '') &&\r\n                    (search === null || search === undefined || search === '')) {\r\n                    throw \"mm-input requiere obligatoriamente ngModel or paginationSearch\\n\";\r\n                } else if (modelo != undefined && modelo !== '' && modelo !== null &&\r\n                    search !== undefined && search !== '' && search !== null) {\r\n                    throw \"mm-input (paginationSearch and ngModel) ambas directivas no son permitidas a la vez\\n\";\r\n                }\r\n\r\n                if (modelo !== undefined && modelo !== '' && modelo !== null) {\r\n                    extraAttrs += 'ng-model=\"' + modelo + '\" ';\r\n                } else {\r\n                    $parse(search + '_search').assign(scope, '');\r\n                    extraAttrs += 'pagination-search=\"' + search + '\" ';\r\n                }\r\n\r\n                var value = '';\r\n                if (modelo !== undefined && modelo !== '' && modelo !== null) {\r\n                    value = modelo;\r\n                } else {\r\n                    value = search + '_search';\r\n                }\r\n                if (tipo === 'password') {\r\n                    value += \" | secreto\"\r\n                }\r\n\r\n                if (tipo === 'number') {\r\n                    var min = attrs.min, max = attrs.max, step = attrs.step;\r\n                    if (angular.isNumber(min)) {\r\n                        extraAttrs += 'min=\"' + min + '\" ';\r\n                        $parse(modelo).assign(scope, Number(min));\r\n                    } else {\r\n                        $parse(modelo).assign(scope, 0);\r\n                    }\r\n\r\n                    scope.$watch(modelo, function (newvalue, currentvalue) {\r\n                        console.log(newvalue, currentvalue);\r\n                        if (newvalue === undefined) {\r\n                            if (angular.isNumber(min)) {\r\n                                $parse(modelo).assign(scope, Number(min));\r\n                            } else {\r\n                                $parse(modelo).assign(scope, 0);\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    if (angular.isNumber(max)) {\r\n                        extraAttrs += 'max=\"' + max + '\" ';\r\n                    }\r\n                    if (angular.isNumber(step)) {\r\n                        extraAttrs += 'step=\"' + step + '\" ';\r\n                    }\r\n                }\r\n\r\n                var required = attrs.required;\r\n                var readonly = attrs.readonly;\r\n                if (required !== undefined && required === true) {\r\n                    extraAttrs += \"required \"\r\n                }\r\n\r\n                if (angular.isString(readonly)) {\r\n                    if (readonly !== undefined && (readonly === \"\" || readonly === \"true\")) {\r\n                        extraAttrs += \"readonly \";\r\n                    }\r\n                }\r\n\r\n                var template = angular.element(\r\n                    '<div class=\"form-group\" style=\"' + estilo + '\">' +\r\n                    '<div class=\"input-group\">' +\r\n                    // '<input id=\"txt_' + modelo + '\" type=\"' + tipo + '\" ng-model=\"' + modelo + '\" name=\"txt_' + modelo + '\" value=\"\" onchange=\"this.setAttribute(\"value\", this.value);\" class=\"form-control\" />' +\r\n                    '<input id=\"txt_' + modelo + '\" type=\"' + tipo + '\" name=\"txt_' + modelo + '\" value=\"{{' + value + '}}\" class=\"form-control\" ' + extraAttrs + '/>' +\r\n                    '<label for=\"txt_' + modelo + '\">' + placeholder + '</label>' +\r\n                    '<line class=\"line\"></line>' +\r\n                    '</div>' +\r\n                    '</div>');\r\n\r\n                $compile(template)(scope);\r\n                elemento.append(template);\r\n                // elemento.replaceWith(template);\r\n            }\r\n        }\r\n    }\r\n}]);\r\n\r\nminiapp.directive('mmTextarea', ['$compile', function ($compile) {\r\n    return {\r\n        terminal: true,\r\n        scope: false,\r\n        restrict: 'E',\r\n        compile: function (tElement, tAttrs) {\r\n            return function Linked(scope, elemento, attrs) {\r\n                var estilo = attrs.style !== undefined ? attrs.style : '';\r\n\r\n                var modelo = attrs.ngModel;\r\n                if (modelo === null || modelo === undefined || modelo === '') {\r\n                    throw \"mm-textarea Requiere obligatoriamente ngModel\";\r\n                }\r\n\r\n                var placeholder = attrs.placeholder !== undefined ? attrs.placeholder : '';\r\n\r\n                var extraAttrs = \"\";\r\n                var required = attrs.required;\r\n                var readonly = attrs.readonly;\r\n                if (required !== undefined && required === true) {\r\n                    extraAttrs += \"required \"\r\n                }\r\n\r\n                if (angular.isString(readonly)) {\r\n                    if (readonly !== undefined && (readonly === \"\" || readonly === \"true\")) {\r\n                        extraAttrs += \"readonly \";\r\n                    }\r\n                }\r\n\r\n                var template = angular.element(\r\n                    '<div class=\"form-group\" style=\"padding-top:5px;' + estilo + '\">' +\r\n                    '<div class=\"input-group\">' +\r\n                    // '<input id=\"txt_' + modelo + '\" type=\"' + tipo + '\" ng-model=\"' + modelo + '\" name=\"txt_' + modelo + '\" value=\"\" onchange=\"this.setAttribute(\"value\", this.value);\" class=\"form-control\" />' +\r\n                    '<textarea id=\"txt_' + modelo + '\" ng-model=\"' + modelo + '\" name=\"txt_' + modelo + '\" value=\"{{' + modelo + '}}\" class=\"form-control\" ' + extraAttrs + '></textarea>' +\r\n                    '<label for=\"txt_' + modelo + '\">' + placeholder + '</label>' +\r\n                    '<line class=\"line\"></line>' +\r\n                    '</div>' +\r\n                    '</div>');\r\n\r\n                var textarea = template[0].firstChild.firstChild;\r\n                textarea.onkeyup = function (evt) {\r\n                    this.style.height = \"4px\";\r\n                    this.style.height = (this.scrollHeight + 10) + 'px';\r\n                    // this.style.height = (this.scrollHeight + 10) + 'px';\r\n                };\r\n\r\n                textarea.onkeydown = function (evt) {\r\n                    this.style.height = \"4px\";\r\n                    this.style.height = (this.scrollHeight + 10) + 'px';\r\n                    // this.style.height = \"auto\";\r\n                    // if (this.scrollHeight > 29 ) {\r\n                    //     this.style.height = (this.scrollHeight + 10) + 'px';\r\n                    // }\r\n                }\r\n\r\n                $compile(template)(scope);\r\n                elemento.append(template);\r\n                // elemento.replaceWith(template);\r\n            }\r\n        }\r\n    }\r\n}]);","miniapp.directive('mmLoader', ['$compile', function ($compile) {\r\n    return {\r\n        terminal: true,\r\n        scope: false,\r\n        restrict: 'E',\r\n        compile: function (tElement, tAttrs) {\r\n            return function Linked(scope, elemento, attrs) {\r\n                var ancho = attrs.width;\r\n                var alto = attrs.height;\r\n                if (ancho === undefined &&\r\n                    alto === undefined) {\r\n                    ancho = '50px';\r\n                    alto = '50px';\r\n                }\r\n                if (ancho === undefined && alto !== undefined) {\r\n                    ancho = alto;\r\n                } else if (alto === undefined && ancho !== undefined) {\r\n                    alto = ancho;\r\n                }\r\n\r\n                var modelo = attrs.ngModel;\r\n                if (modelo === null || modelo === undefined || modelo === '') {\r\n                    throw \"mm-loader Requiere obligatoriamente ngModel\";\r\n                }\r\n\r\n                var stroke = attrs.strokeWidth !== undefined ? attrs.strokeWidth : 6;\r\n\r\n                var template = angular.element(\r\n                    '<div class=\"spinner-container\" ng-if=\"' + modelo + '\">' +\r\n                    '<svg class=\"spinner\" width= \"' + ancho + '\" height= \"' + alto + '\" viewBox= \"0 0 66 66\" xmlns= \"http://www.w3.org/2000/svg\">' +\r\n                    '<circle class=\"path\" fill=\"none\" stroke-width=\"' + stroke + '\" stroke-linecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\"></circle>' +\r\n                    '</svg >' +\r\n                    '</div >');\r\n                $compile(template)(scope);\r\n                elemento.replaceWith(template);\r\n            };\r\n        }\r\n    };\r\n}]);","miniapp.directive('ngPaginationControl', ['$compile', '$parse', '$paginationRegister', function ($compile, $parse, $paginationRegister) {\r\n    'use strict';\r\n    return {\r\n        priority: 10,\r\n        restrict: 'E',\r\n        scope: false,\r\n\r\n        compile: function (element, attrs) {\r\n            var registro = new $paginationRegister();\r\n            if (element.attr('pagination-id') === undefined || element.attr('pagination-id') === '') {\r\n                throw \"directiva NG-PAGINATION-CONTROL requiere atributo pagination-id\\n\";\r\n            } else {\r\n                registro.set(element.attr('pagination-id'));\r\n            }\r\n\r\n            // COMPILE RETURNED LINKED\r\n            return function (scope, element, atributos) {\r\n                var dataNotation = registro.getDataNotation();\r\n                var resultados = filtrar($parse(dataNotation)(scope), $parse(registro.getSearchNotation())(scope));\r\n                var controls = angular.element('<div class=\"pagination-panel\">' +\r\n                    '<button ng-click=\"' + registro.getBeforeNotation() + '()\" type=\"button\"' +\r\n                    'ng-disabled=\"' + registro.getCurrentNotation() + '<=0\">Anterior</button>' +\r\n\r\n                    '<small class=\"indicator\">{{' + registro.getCurrentNotation() + '+1}}/{{' + registro.getPagesNotation() + '}}</small>' +\r\n\r\n                    '<button ng-click=\"' + registro.getNextNotation() + '()\" type=\"button\"' +\r\n                    'ng-disabled=\"' + registro.getCurrentNotation() + '>=(' + registro.getDataLengthNotation() + '/' + registro.getSizeNotation() + ')-1\">Siguiente</button>' +\r\n                    '</div>');\r\n\r\n                $parse(registro.getBeforeNotation()).assign(scope, function () {\r\n                    var actual = $parse(registro.getCurrentNotation())(scope);\r\n                    actual = actual - 1;\r\n                    $parse(registro.getCurrentNotation()).assign(scope, actual);\r\n                });\r\n\r\n                $parse(registro.getNextNotation()).assign(scope, function () {\r\n                    var actual = $parse(registro.getCurrentNotation())(scope);\r\n                    actual = actual + 1;\r\n                    $parse(registro.getCurrentNotation()).assign(scope, actual);\r\n                });\r\n\r\n                $compile(controls)(scope);\r\n                element.replaceWith(controls);\r\n            };\r\n        }\r\n    };\r\n}]);","miniapp.directive('paginationSearch', ['$compile', '$parse', '$paginationRegister', function ($compile, $parse, $paginationRegister) {\r\n    'use strict';\r\n    return {\r\n        priority: 5,\r\n        restrict: 'A',\r\n        scope: false,\r\n\r\n        compile: function (iElement, iAttrs) {\r\n            var registro = new $paginationRegister();\r\n\r\n            var elementName = iElement[0].localName.toLowerCase();\r\n\r\n            // ESTA DIRECTIVA SOLO PUEDE SER USADA POR UN ELEMENTO INPUT\r\n            // if (elementName != 'input') {\r\n            //     throw \"Directive pagination-search solo se puede usar por elemento input\\n\";\r\n            // }\r\n            var atributo = iElement.attr('pagination-search');\r\n            if (atributo === undefined || atributo === '') {\r\n                throw \"Directive pagination-search not value\\n\";\r\n            } else {\r\n                registro.set(atributo);\r\n            }\r\n\r\n            return function (scope, element, attrs) {\r\n                var modelo = registro.getSearchNotation();\r\n                element.attr('ng-model', modelo);\r\n                element.removeAttr('pagination-search');\r\n\r\n                // EVENTO WATCH PARA EL CAMBIO DEL INPUT EN BUSQUEDA\r\n                var dataNotation = registro.getDataNotation();\r\n                var tempDataNotation = dataNotation + '_tmp';\r\n                $parse(modelo).assign(scope, '');\r\n\r\n                scope.$watch(modelo, function () {\r\n                    // CAPTURANDO EL VALOR DEL INPUT\r\n                    var paginas = 0;\r\n                    var filtro = $parse(modelo)(scope);\r\n                    // AL MOMENTO DE BUSQUEDA MANDAR EL CURRENT PAGE A 0 PARA QUE SE VAYA A LA PRIMERA PAGINA\r\n                    $parse(registro.getCurrentNotation()).assign(scope, 0);\r\n                    if (filtro === undefined || filtro === '') {\r\n                        paginas = Number(getPaginas($parse(dataNotation)(scope), $parse(registro.getSizeNotation())(scope)));\r\n                        $parse(registro.getDataLengthNotation()).assign(scope, ($parse(dataNotation)(scope) !== undefined ? $parse(dataNotation)(scope).length : 0));\r\n                    } else {\r\n                        var resultados = filtrar($parse(dataNotation)(scope), filtro);\r\n                        paginas = Number(getPaginas(resultados, $parse(registro.getSizeNotation())(scope)));\r\n                        $parse(registro.getDataLengthNotation()).assign(scope, resultados.length);\r\n                    }\r\n\r\n                    if (paginas > 0 && paginas !== undefined) {\r\n                        $parse(registro.getPagesNotation()).assign(scope, paginas);\r\n                    } else {\r\n                        $parse(registro.getPagesNotation()).assign(scope, 1);\r\n                    }\r\n                });\r\n\r\n                if (elementName == 'input') {\r\n                    $compile(element)(scope);\r\n                }\r\n            };\r\n        }\r\n    };\r\n}]);","miniapp.directive('mmPagination', ['$compile', '$parse', '$paginationRegister', function ($compile, $parse, $paginationRegister) {\r\n    'use strict';\r\n\r\n    function getVarname(RepeatValue) {\r\n        'use strict';\r\n        var variable = RepeatValue.replace(' in ', '~');\r\n        variable = variable.replace(' | ', '~');\r\n        variable = variable.replace('|', '~');\r\n        variable = variable.split('~');\r\n        return variable[1].replace(' ', '');\r\n    };\r\n    return {\r\n        priority: 20,\r\n        multiElement: true,\r\n        terminal: true, // NOS SIRVE POR SI TENEMOS OTRA DIRECTIVA DENTRO DEL  NG-REPEAT\r\n        restrict: 'A', // RESTRINGIDO SOLO A ATTRIBUTO\r\n        scope: false, // NOS DICE QUE EL SCOPE ES EL MISMO DEL CONTROLADOR\r\n\r\n        compile: function (tElement, tAttrs) {\r\n            // COMPILE RETURNED LINKED\r\n            return function (scope, element, attr) {\r\n                var registro = new $paginationRegister();\r\n                var dataNotation = getVarname(element.attr('mm-pagination'));\r\n                registro.set(dataNotation);\r\n                $parse(registro.get()).assign(scope, { pageCurrent: 0, pageSize: 5, pages: 1, dataLength: 1, nextPage: function () { }, beforePage: function () { } });\r\n\r\n                // AGREGANDO ng-repeat Y QUITANDO ng-pagination PARA EVITAR LOOP\r\n                element.attr('mm-pagination', element.attr('mm-pagination') + \" | pagFilter:\" + registro.getSearchNotation());\r\n                element.attr('mm-pagination', element.attr('mm-pagination') + \" | startFrom:\" + registro.getCurrentNotation() + \"*\" + registro.getSizeNotation() + \" | limitTo:\" + registro.getSizeNotation());\r\n                element.attr('ng-repeat', element.attr('mm-pagination'));\r\n                element.removeAttr('mm-pagination');\r\n\r\n                // NUMERO DE DATOS POR PAGINA\r\n                var size = Number(element.attr('pagination-size')) + 0;\r\n                if (angular.isDefined(size) && angular.isNumber(size) && size > 0) {\r\n                    $parse(registro.getSizeNotation()).assign(scope, Number(size));\r\n                }\r\n\r\n                // NUMERO DE PAGINAS\r\n                var paginas = getPaginas($parse(dataNotation)(scope), $parse(registro.getSizeNotation())(scope));\r\n                if (paginas !== undefined && paginas !== '') {\r\n                    $parse(registro.getPagesNotation()).assign(scope, Number(paginas));\r\n                }\r\n\r\n                // EVENTO WATCH PARA CUANDO CAMBIA LA VARIABLE DE LOS DATOS\r\n                scope.$watch(dataNotation, function () {\r\n                    var data = $parse(dataNotation)(scope);\r\n                    if (data === undefined) {\r\n                        console.log('mm-pagination Mensaje: No hay datos');\r\n                    } else {\r\n                        var paginas = Number(getPaginas(data, $parse(registro.getSizeNotation())(scope)));\r\n                        if (paginas > 0) {\r\n                            $parse(registro.getPagesNotation()).assign(scope, paginas);\r\n                        } else {\r\n                            $parse(registro.getPagesNotation()).assign(scope, 1);\r\n                        }\r\n                        $parse(registro.getDataLengthNotation()).assign(scope, data.length);\r\n                    }\r\n                });\r\n                $compile(element)(scope);\r\n            };\r\n        }\r\n    };\r\n}]);","miniapp.service('$mmSnackbar', [function () {\r\n    var body = angular.element(document.body);\r\n    var time = 3000;\r\n\r\n    var wrapper = angular.element('<div class=\"snackbar-wrapper\" id=\"snack1\"><div>');\r\n    body.append(wrapper);\r\n\r\n    function CreateSnackbar(tpl) {\r\n        wrapper.append(tpl);\r\n        // tpl.removeClass('hide');\r\n        tpl.addClass('show');\r\n        setTimeout(function () {\r\n            tpl.addClass('hide');\r\n            // tpl.removeClass('show');\r\n        }, time);\r\n\r\n        setTimeout(function () {\r\n            tpl.remove();\r\n        }, time + 450);\r\n    }\r\n\r\n    function CreateStyle(sty) {\r\n        body.append(\r\n            '<style type=\"text/css\">' + sty + '</style>'\r\n        );\r\n    }\r\n\r\n    return {\r\n        success: function (message) {\r\n            var template = angular.element(\r\n                '<div class=\"snackbar snackbar-success\">' + message +\r\n                '</div>'\r\n            );\r\n            CreateSnackbar(template);\r\n        },\r\n        info: function (message) {\r\n            var template = angular.element(\r\n                '<div class=\"snackbar snackbar-info\">' + message +\r\n                '</div>'\r\n            );\r\n            CreateSnackbar(template);\r\n        },\r\n        warning: function (message) {\r\n            var template = angular.element(\r\n                '<div class=\"snackbar snackbar-warning\">' + message +\r\n                '</div>'\r\n            );\r\n            CreateSnackbar(template);\r\n        },\r\n        error: function (message) {\r\n            var template = angular.element(\r\n                '<div class=\"snackbar snackbar-error\">' + message +\r\n                '</div>'\r\n            );\r\n            CreateSnackbar(template);\r\n        },\r\n        setTime: function (tiempo) {\r\n            time = tiempo;\r\n            return this;\r\n        },\r\n        setPosition: function (position) {\r\n            position = position.toLowerCase();\r\n            switch (position) {\r\n                case \"bottom-left\":\r\n                    CreateStyle('.snackbar-wrapper { bottom: 30px; left:30px; margin:0; }');\r\n                    break;\r\n                case \"bottom-right\":\r\n                    CreateStyle('.snackbar-wrapper { bottom: 30px; right:30px; margin:0; }');\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}]);","miniapp.directive('mmSwitch', ['$compile', function ($compile) {\r\n    return {\r\n        terminal: true,\r\n        scope: false,\r\n        restrict: 'E',\r\n        // require: '?ngModel',\r\n        compile: function (tElement, tAttrs) {\r\n            return function Linked(scope, elemento, attrs) {\r\n                var estilo = attrs.style !== undefined ? attrs.style : '';\r\n\r\n                var modelo = attrs.ngModel;\r\n                if (modelo === null || modelo === undefined || modelo === '') {\r\n                    throw \"mm-switch Requiere obligatoriamente ngModel\";\r\n                }\r\n\r\n                var label = attrs.label !== undefined ? attrs.label : '';\r\n\r\n                var template = angular.element(\r\n                    '<div class=\"mmswitch-container\">' +\r\n                    '<click style=\"cursor:pointer;\" ng-click=\"' + modelo + '=!' + modelo + '\">' + label + '</click>' +\r\n                    '<div class=\"mmswitch\" >' +\r\n                    '<input id=\"sw_' + modelo + '\" ng-model=\"' + modelo + '\" type=\"checkbox\" />' +\r\n                    '<label for=\"sw_' + modelo + '\" class=\"label-primary\"></label>' +\r\n                    '</div >' +\r\n                    '</div >'\r\n                );\r\n\r\n                $compile(template)(scope);\r\n                elemento.replaceWith(template);\r\n            }\r\n        }\r\n    }\r\n}]);","miniapp.directive('mmTab', [function () {\r\n    return {\r\n        priority: 0,\r\n        replace: true,\r\n        restrict: 'E',\r\n        require: '^mmTabbed',\r\n        // transclude: true,\r\n        scope: { label: '@', href: '@', class: '@classes' },\r\n        template: '<li role=\"presentation\" class=\"{{classes}}\"><a role=\"button\" data-toggle=\"tab\" data-target=\"{{href}}\">{{label}}</a></li>',\r\n        link: function (scope, element, attrs, tabbed) {\r\n            element.on('click', function (evt) {\r\n                evt.preventDefault();\r\n                var id = element[0].firstChild.getAttribute('data-target');\r\n                console.log(id);\r\n                tabbed.selectTab(id);\r\n\r\n                // var id = element[0].firstChild.getAttribute('data-target');\r\n                // var tab = angular.element(document.getElementById(id));\r\n                // console.log(id, tab, element[0].firstChild);\r\n            });\r\n\r\n            tabbed.addTab(element[0]);\r\n        }\r\n    }\r\n}]);\r\n\r\nminiapp.directive('mmTabContent', [function () {\r\n    return {\r\n        priority: 0,\r\n        replace: true,\r\n        restrict: 'E',\r\n        require: '^mmTabbedContent',\r\n        // scope: { href: '@' },\r\n        terminal: true,\r\n        transclude: true,\r\n        template: '<div role=\"tabpanel\" class=\"tab-pane\" ng-transclude=\"\"> </div>'\r\n    }\r\n}]);","miniapp.directive('mmTabbed', [function () {\r\n    return {\r\n        priority: 1,\r\n        transclude: true,\r\n        terminal: false,\r\n        replace: true,\r\n        restrict: 'E',\r\n        template: '<div class=\"nav nav-tabs\" role=\"tablist\" ng-transclude=\"\"></div>',\r\n        controller: ['$scope', function ($scope) {\r\n            var tabs = [];\r\n            this.removeActive = function () {\r\n                angular.forEach(tabs, function (tab) {\r\n                    var target = tab.firstChild.getAttribute('data-target').substr(1);\r\n                    var content = document.getElementById(target);\r\n                    content.setAttribute('class', 'tab-pane');\r\n                    tab.removeAttribute('class');\r\n                });\r\n            };\r\n\r\n            this.selectTab = function (name) {\r\n                this.removeActive();\r\n                angular.forEach(tabs, function (tab) {\r\n                    var href = tab.firstChild.getAttribute('data-target');\r\n                    console.log(href, name);\r\n                    if (href === name) {\r\n                        var target = tab.firstChild.getAttribute('data-target').substr(1);\r\n                        var content = document.getElementById(target);\r\n                        content.setAttribute('class', 'tab-pane active');\r\n                        tab.setAttribute('class', 'active');\r\n                    }\r\n                });\r\n            };\r\n\r\n            this.addTab = function (element) {\r\n                tabs.push(element);\r\n            };\r\n        }]\r\n    }\r\n}]);\r\n\r\nminiapp.directive('mmTabbedContent', [function () {\r\n    return {\r\n        priority: 1,\r\n        transclude: true,\r\n        terminal: false,\r\n        replace: true,\r\n        restrict: 'E',\r\n        template: '<div class=\"tab-content\" ng-transclude=\"\"> </div>'\r\n    }\r\n}]);"]}