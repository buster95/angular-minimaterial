{"version":3,"sources":["angular-minimaterial.js"],"names":["miniapp","angular","module","service","Primary","color","directive","$compile","terminal","scope","transclude","replace","template","restrict","compile","tElement","tAttrs","elemento","attrs","modelo","ngModel","undefined","label","element","replaceWith","filter","input","multiElement","ngIf","removeAttribute","tipo","type","estilo","style","placeholder","valueAttr","extraAttrs","required","readonly","console","log","isString","append","textarea","firstChild","onkeyup","evt","this","height","scrollHeight","onkeydown","ancho","width","alto","stroke","strokeWidth","CreateSnackbar","tpl","wrapper","addClass","setTimeout","time","remove","CreateStyle","sty","body","document","success","message","info","warning","error","setTime","tiempo","setPosition","position","toLowerCase"],"mappings":"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","file":"angular-minimaterial.min.js","sourcesContent":["var miniapp = angular.module('ngMiniMaterial', []);\r\n\r\nminiapp.service('$ngMiniMaterialProvider', [function () {\r\n    var colorPrimary = \"\";\r\n    var colorPrimaryHover = \"\";\r\n\r\n    return {\r\n        Primary: function (color) {\r\n        }\r\n    }\r\n}]);\nminiapp.directive('mmButton', ['$compile', function ($compile) {\r\n    return {\r\n        terminal: true, // si la directiva tiene internamente otras directivas\r\n        scope: false, // utilizar el scope actual\r\n        transclude: true, // Es para traspasar atributos y elementos internos de la directiva\r\n        replace: true, // reemplazar directiva por el template\r\n        template: '<button class=\"btn ripple\" ng-transclude></button>',\r\n        restrict: 'E' // solo elemento\r\n    }\r\n}]);\nminiapp.directive('mmCheckbox', ['$compile', function ($compile) {\r\n    return {\r\n        terminal: true,\r\n        scope: false,\r\n        restrict: 'E',\r\n        compile: function (tElement, tAttrs) {\r\n            return function Linked(scope, elemento, attrs) {\r\n                var modelo = attrs.ngModel;\r\n                if (modelo === null || modelo === undefined || modelo === '') {\r\n                    throw \"mm-checkbox Requiere obligatoriamente ngModel\";\r\n                }\r\n\r\n                var label = attrs.label !== undefined ? attrs.label : '';\r\n\r\n                var template = angular.element('<div class=\"form-group\">' +\r\n                    '<div class=\"checkbox\">' +\r\n                    '<input id=\"chk_' + modelo + '\" ng-model=\"' + modelo + '\" type=\"checkbox\">' +\r\n                    '<label for=\"chk_' + modelo + '\">' + label + '</label>' +\r\n                    '</div>' +\r\n                    '</div>');\r\n\r\n                $compile(template)(scope);\r\n                elemento.replaceWith(template);\r\n            }\r\n        }\r\n    }\r\n}]);\nminiapp.filter('secreto', [function () {\r\n    return function (input) {\r\n        if (input !== undefined && input !== null) {\r\n            return input.replace(/./gi, '*');\r\n        }\r\n        return \"\";\r\n    }\r\n}]);\r\n\r\nminiapp.directive('mmInput', ['$compile', function ($compile) {\r\n    return {\r\n        // transclude: 'element',\r\n        // priority: 600,\r\n        multiElement: true,\r\n        terminal: true,\r\n        scope: false,\r\n        restrict: 'E',\r\n        // require: '?ngModel, ?ngIf',\r\n        compile: function (tElement, tAttrs) {\r\n            var condicional = tAttrs.ngIf;\r\n            var iElement = tElement[0];\r\n            iElement.removeAttribute(\"ngIf\");\r\n\r\n            return function PostLink(scope, elemento, attrs) {\r\n                var tipo = attrs.type !== undefined ? attrs.type : 'text';\r\n                var estilo = attrs.style !== undefined ? attrs.style : '';\r\n                var placeholder = attrs.placeholder !== undefined ? attrs.placeholder : '';\r\n\r\n                var modelo = attrs.ngModel;\r\n                if (modelo === null || modelo === undefined || modelo === '') {\r\n                    throw \"mm-input Requiere obligatoriamente ngModel\";\r\n                }\r\n\r\n                var valueAttr = attrs.ngModel;\r\n                if (tipo === 'password') {\r\n                    valueAttr += \" | secreto\"\r\n                }\r\n\r\n                var extraAttrs = \"\";\r\n                var required = attrs.required;\r\n                var readonly = attrs.readonly;\r\n                console.log(readonly);\r\n                if (required !== undefined && required === true) {\r\n                    extraAttrs += \"required \"\r\n                }\r\n\r\n                if (angular.isString(readonly)) {\r\n                    if (readonly !== undefined && (readonly === \"\" || readonly === \"true\")) {\r\n                        extraAttrs += \"readonly \";\r\n                    }\r\n                }\r\n\r\n                var template = angular.element(\r\n                    '<div class=\"form-group\" style=\"' + estilo + '\">' +\r\n                    '<div class=\"input-group\">' +\r\n                    // '<input id=\"txt_' + modelo + '\" type=\"' + tipo + '\" ng-model=\"' + modelo + '\" name=\"txt_' + modelo + '\" value=\"\" onchange=\"this.setAttribute(\"value\", this.value);\" class=\"form-control\" />' +\r\n                    '<input id=\"txt_' + modelo + '\" type=\"' + tipo + '\" ng-model=\"' + modelo + '\" name=\"txt_' + modelo + '\" value=\"{{' + valueAttr + '}}\" class=\"form-control\" ' + extraAttrs + '/>' +\r\n                    '<label for=\"txt_' + modelo + '\">' + placeholder + '</label>' +\r\n                    '</div>' +\r\n                    '</div>');\r\n\r\n                $compile(template)(scope);\r\n                elemento.append(template);\r\n                // elemento.replaceWith(template);\r\n            }\r\n        }\r\n    }\r\n}]);\r\n\r\nminiapp.directive('mmTextarea', ['$compile', function ($compile) {\r\n    return {\r\n        terminal: true,\r\n        scope: false,\r\n        restrict: 'E',\r\n        compile: function (tElement, tAttrs) {\r\n            return function Linked(scope, elemento, attrs) {\r\n                var estilo = attrs.style !== undefined ? attrs.style : '';\r\n\r\n                var modelo = attrs.ngModel;\r\n                if (modelo === null || modelo === undefined || modelo === '') {\r\n                    throw \"mm-input Requiere obligatoriamente ngModel\";\r\n                }\r\n\r\n                var placeholder = attrs.placeholder !== undefined ? attrs.placeholder : '';\r\n\r\n                var extraAttrs = \"\";\r\n                var required = attrs.required;\r\n                var readonly = attrs.readonly;\r\n                if (required !== undefined && required === true) {\r\n                    extraAttrs += \"required \"\r\n                }\r\n\r\n                if (angular.isString(readonly)) {\r\n                    if (readonly !== undefined && (readonly === \"\" || readonly === \"true\")) {\r\n                        extraAttrs += \"readonly \";\r\n                    }\r\n                }\r\n\r\n                var template = angular.element(\r\n                    '<div class=\"form-group\" style=\"padding-top:5px;' + estilo + '\">' +\r\n                    '<div class=\"input-group\">' +\r\n                    // '<input id=\"txt_' + modelo + '\" type=\"' + tipo + '\" ng-model=\"' + modelo + '\" name=\"txt_' + modelo + '\" value=\"\" onchange=\"this.setAttribute(\"value\", this.value);\" class=\"form-control\" />' +\r\n                    '<textarea id=\"txt_' + modelo + '\" ng-model=\"' + modelo + '\" name=\"txt_' + modelo + '\" value=\"{{' + modelo + '}}\" class=\"form-control\" ' + extraAttrs + '></textarea>' +\r\n                    '<label for=\"txt_' + modelo + '\">' + placeholder + '</label>' +\r\n                    '</div>' +\r\n                    '</div>');\r\n\r\n                var textarea = template[0].firstChild.firstChild;\r\n                textarea.onkeyup = function (evt) {\r\n                    this.style.height = \"4px\";\r\n                    this.style.height = (this.scrollHeight + 10) + 'px';\r\n                    // this.style.height = (this.scrollHeight + 10) + 'px';\r\n                };\r\n\r\n                textarea.onkeydown = function (evt) {\r\n                    this.style.height = \"4px\";\r\n                    this.style.height = (this.scrollHeight + 10) + 'px';\r\n                    // this.style.height = \"auto\";\r\n                    // if (this.scrollHeight > 29 ) {\r\n                    //     this.style.height = (this.scrollHeight + 10) + 'px';\r\n                    // }\r\n                }\r\n\r\n                $compile(template)(scope);\r\n                elemento.append(template);\r\n                // elemento.replaceWith(template);\r\n            }\r\n        }\r\n    }\r\n}]);\n\nminiapp.directive('mmLoader', ['$compile', function ($compile) {\r\n    return {\r\n        terminal: true,\r\n        scope: false,\r\n        restrict: 'E',\r\n        compile: function (tElement, tAttrs) {\r\n            return function Linked(scope, elemento, attrs) {\r\n                var ancho = attrs.width;\r\n                var alto = attrs.height;\r\n                if (ancho === undefined &&\r\n                    alto === undefined) {\r\n                    ancho = '50px';\r\n                    alto = '50px';\r\n                }\r\n                if (ancho === undefined && alto !== undefined) {\r\n                    ancho = alto;\r\n                } else if (alto === undefined && ancho !== undefined) {\r\n                    alto = ancho;\r\n                }\r\n\r\n                var modelo = attrs.ngModel;\r\n                if (modelo === null || modelo === undefined || modelo === '') {\r\n                    throw \"mm-loader Requiere obligatoriamente ngModel\";\r\n                }\r\n\r\n                var stroke = attrs.strokeWidth !== undefined ? attrs.strokeWidth : 6;\r\n\r\n                var template = angular.element(\r\n                    '<div class=\"spinner-container\" ng-if=\"' + modelo + '\">' +\r\n                    '<svg class=\"spinner\" width= \"' + ancho + '\" height= \"' + alto + '\" viewBox= \"0 0 66 66\" xmlns= \"http://www.w3.org/2000/svg\">' +\r\n                    '<circle class=\"path\" fill=\"none\" stroke-width=\"' + stroke + '\" stroke-linecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\"></circle>' +\r\n                    '</svg >' +\r\n                    '</div >');\r\n                $compile(template)(scope);\r\n                elemento.replaceWith(template);\r\n            };\r\n        }\r\n    };\r\n}]);\nminiapp.directive('mmSwitch', ['$compile', function ($compile) {\r\n    return {\r\n        terminal: true,\r\n        scope: false,\r\n        restrict: 'E',\r\n        // require: '?ngModel',\r\n        compile: function (tElement, tAttrs) {\r\n            return function Linked(scope, elemento, attrs) {\r\n                var estilo = attrs.style !== undefined ? attrs.style : '';\r\n\r\n                var modelo = attrs.ngModel;\r\n                if (modelo === null || modelo === undefined || modelo === '') {\r\n                    throw \"mm-switch Requiere obligatoriamente ngModel\";\r\n                }\r\n\r\n                var label = attrs.label !== undefined ? attrs.label : '';\r\n\r\n                var template = angular.element(\r\n                    '<div class=\"mmswitch-container\">' +\r\n                    '<click style=\"cursor:pointer;\" ng-click=\"' + modelo + '=!' + modelo + '\">' + label + '</click>' +\r\n                    '<div class=\"mmswitch\" >' +\r\n                    '<input id=\"sw_' + modelo + '\" ng-model=\"' + modelo + '\" type=\"checkbox\" />' +\r\n                    '<label for=\"sw_' + modelo + '\" class=\"label-primary\"></label>' +\r\n                    '</div >' +\r\n                    '</div >'\r\n                );\r\n\r\n                $compile(template)(scope);\r\n                elemento.replaceWith(template);\r\n            }\r\n        }\r\n    }\r\n}]);\nminiapp.service('$mmSnackbar', [function () {\r\n    var body = angular.element(document.body);\r\n    var time = 3000;\r\n\r\n    var wrapper = angular.element('<div class=\"snackbar-wrapper\" id=\"snack1\"><div>');\r\n    body.append(wrapper);\r\n\r\n    function CreateSnackbar(tpl) {\r\n        wrapper.append(tpl);\r\n        // tpl.removeClass('hide');\r\n        tpl.addClass('show');\r\n        setTimeout(function () {\r\n            tpl.addClass('hide');\r\n            // tpl.removeClass('show');\r\n        }, time);\r\n\r\n        setTimeout(function () {\r\n            tpl.remove();\r\n        }, time + 450);\r\n    }\r\n\r\n    function CreateStyle(sty) {\r\n        body.append(\r\n            '<style type=\"text/css\">' + sty + '</style>'\r\n        );\r\n    }\r\n\r\n    return {\r\n        success: function (message) {\r\n            var template = angular.element(\r\n                '<div class=\"snackbar snackbar-success\">' + message +\r\n                '</div>'\r\n            );\r\n            CreateSnackbar(template);\r\n        },\r\n        info: function (message) {\r\n            var template = angular.element(\r\n                '<div class=\"snackbar snackbar-info\">' + message +\r\n                '</div>'\r\n            );\r\n            CreateSnackbar(template);\r\n        },\r\n        warning: function (message) {\r\n            var template = angular.element(\r\n                '<div class=\"snackbar snackbar-warning\">' + message +\r\n                '</div>'\r\n            );\r\n            CreateSnackbar(template);\r\n        },\r\n        error: function (message) {\r\n            var template = angular.element(\r\n                '<div class=\"snackbar snackbar-error\">' + message +\r\n                '</div>'\r\n            );\r\n            CreateSnackbar(template);\r\n        },\r\n        setTime: function (tiempo) {\r\n            time = tiempo;\r\n            return this;\r\n        },\r\n        setPosition: function (position) {\r\n            position = position.toLowerCase();\r\n            switch (position) {\r\n                case \"bottom-left\":\r\n                    CreateStyle('.snackbar-wrapper { bottom: 30px; left:30px; margin:0; }');\r\n                    break;\r\n                case \"bottom-right\":\r\n                    CreateStyle('.snackbar-wrapper { bottom: 30px; right:30px; margin:0; }');\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}]);"]}