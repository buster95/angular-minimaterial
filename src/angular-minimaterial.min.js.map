{"version":3,"sources":["minimaterial.js","button/minimaterial-button.js","checkbox/minimaterial-checkbox.js","input/minimaterial-input.js","loader/minimaterial-loader.js","snackbar/snackbar.js","switch/minimaterial-switch.js"],"names":["miniapp","angular","module","isNumber","num","n","Number","isNaN","service","Primary","color","directive","$compile","terminal","scope","transclude","replace","template","restrict","compile","tElement","tAttrs","elemento","attrs","modelo","ngModel","undefined","label","element","replaceWith","filter","input","$parse","multiElement","tipo","type","estilo","style","placeholder","value","extraAttrs","min","max","step","assign","$watch","newvalue","currentvalue","console","log","required","readonly","isString","append","textarea","firstChild","onkeyup","evt","this","height","scrollHeight","onkeydown","ancho","width","alto","stroke","strokeWidth","CreateSnackbar","tpl","wrapper","addClass","setTimeout","time","remove","CreateStyle","sty","body","document","success","message","info","warning","error","setTime","tiempo","setPosition","position","toLowerCase"],"mappings":"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","file":"angular-minimaterial.min.js","sourcesContent":["var miniapp = angular.module('ngMiniMaterial', []);\r\n\r\nangular.isNumber = function (num) {\r\n    var n = Number(num);\r\n    if (typeof (n) === 'number' && !isNaN(n)) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nminiapp.service('$ngMiniMaterialProvider', [function () {\r\n    var colorPrimary = \"\";\r\n    var colorPrimaryHover = \"\";\r\n\r\n    return {\r\n        Primary: function (color) {\r\n        }\r\n    }\r\n}]);","miniapp.directive('mmButton', ['$compile', function ($compile) {\r\n    return {\r\n        terminal: true, // si la directiva tiene internamente otras directivas\r\n        scope: false, // utilizar el scope actual\r\n        transclude: true, // Es para traspasar atributos y elementos internos de la directiva\r\n        replace: true, // reemplazar directiva por el template\r\n        template: '<button class=\"btn ripple\" ng-transclude></button>',\r\n        restrict: 'E' // solo elemento\r\n    }\r\n}]);","miniapp.directive('mmCheckbox', ['$compile', function ($compile) {\r\n    return {\r\n        terminal: true,\r\n        scope: false,\r\n        restrict: 'E',\r\n        compile: function (tElement, tAttrs) {\r\n            return function Linked(scope, elemento, attrs) {\r\n                var modelo = attrs.ngModel;\r\n                if (modelo === null || modelo === undefined || modelo === '') {\r\n                    throw \"mm-checkbox Requiere obligatoriamente ngModel\";\r\n                }\r\n\r\n                var label = attrs.label !== undefined ? attrs.label : '';\r\n\r\n                var template = angular.element('<div class=\"form-group\">' +\r\n                    '<div class=\"checkbox\">' +\r\n                    '<input id=\"chk_' + modelo + '\" ng-model=\"' + modelo + '\" type=\"checkbox\">' +\r\n                    '<label for=\"chk_' + modelo + '\">' + label + '</label>' +\r\n                    '</div>' +\r\n                    '</div>');\r\n\r\n                $compile(template)(scope);\r\n                elemento.replaceWith(template);\r\n            }\r\n        }\r\n    }\r\n}]);","miniapp.filter('secreto', [function () {\r\n    return function (input) {\r\n        if (input !== undefined && input !== null) {\r\n            return input.replace(/./gi, '*');\r\n        }\r\n        return \"\";\r\n    }\r\n}]);\r\n\r\nminiapp.directive('mmInput', ['$compile', '$parse', function ($compile, $parse) {\r\n    return {\r\n        // transclude: 'element',\r\n        // priority: 600,\r\n        multiElement: true,\r\n        terminal: true,\r\n        scope: false,\r\n        restrict: 'E',\r\n        // require: '?ngModel, ?ngIf',\r\n        compile: function (tElement, tAttrs) {\r\n            return function PostLink(scope, elemento, attrs) {\r\n                var tipo = attrs.type !== undefined ? attrs.type : 'text';\r\n                var estilo = attrs.style !== undefined ? attrs.style : '';\r\n                var placeholder = attrs.placeholder !== undefined ? attrs.placeholder : '';\r\n\r\n                var modelo = attrs.ngModel;\r\n                if (modelo === null || modelo === undefined || modelo === '') {\r\n                    throw \"mm-input Requiere obligatoriamente ngModel\";\r\n                }\r\n\r\n                var value = attrs.ngModel;\r\n                if (tipo === 'password') {\r\n                    value += \" | secreto\"\r\n                }\r\n\r\n                var extraAttrs = \"\";\r\n                if (tipo === 'number') {\r\n                    var min = attrs.min, max = attrs.max, step = attrs.step;\r\n                    if (angular.isNumber(min)) {\r\n                        extraAttrs += 'min=\"' + min + '\"';\r\n                        $parse(modelo).assign(scope, Number(min));\r\n                    } else {\r\n                        $parse(modelo).assign(scope, 0);\r\n                    }\r\n\r\n                    scope.$watch(modelo, function (newvalue, currentvalue) {\r\n                        console.log(newvalue, currentvalue);\r\n                        if (newvalue === undefined) {\r\n                            if (angular.isNumber(min)) {\r\n                                $parse(modelo).assign(scope, Number(min));\r\n                            } else {\r\n                                $parse(modelo).assign(scope, 0);\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    if (angular.isNumber(max)) {\r\n                        extraAttrs += 'max=\"' + max + '\"';\r\n                    }\r\n                    if (angular.isNumber(step)) {\r\n                        extraAttrs += 'step=\"' + step + '\"';\r\n                    }\r\n                }\r\n\r\n                var required = attrs.required;\r\n                var readonly = attrs.readonly;\r\n                if (required !== undefined && required === true) {\r\n                    extraAttrs += \"required \"\r\n                }\r\n\r\n                if (angular.isString(readonly)) {\r\n                    if (readonly !== undefined && (readonly === \"\" || readonly === \"true\")) {\r\n                        extraAttrs += \"readonly \";\r\n                    }\r\n                }\r\n\r\n                var template = angular.element(\r\n                    '<div class=\"form-group\" style=\"' + estilo + '\">' +\r\n                    '<div class=\"input-group\">' +\r\n                    // '<input id=\"txt_' + modelo + '\" type=\"' + tipo + '\" ng-model=\"' + modelo + '\" name=\"txt_' + modelo + '\" value=\"\" onchange=\"this.setAttribute(\"value\", this.value);\" class=\"form-control\" />' +\r\n                    '<input id=\"txt_' + modelo + '\" type=\"' + tipo + '\" ng-model=\"' + modelo + '\" name=\"txt_' + modelo + '\" value=\"{{' + value + '}}\" class=\"form-control\" ' + extraAttrs + '/>' +\r\n                    '<label for=\"txt_' + modelo + '\">' + placeholder + '</label>' +\r\n                    '</div>' +\r\n                    '</div>');\r\n\r\n                $compile(template)(scope);\r\n                elemento.append(template);\r\n                // elemento.replaceWith(template);\r\n            }\r\n        }\r\n    }\r\n}]);\r\n\r\nminiapp.directive('mmTextarea', ['$compile', function ($compile) {\r\n    return {\r\n        terminal: true,\r\n        scope: false,\r\n        restrict: 'E',\r\n        compile: function (tElement, tAttrs) {\r\n            return function Linked(scope, elemento, attrs) {\r\n                var estilo = attrs.style !== undefined ? attrs.style : '';\r\n\r\n                var modelo = attrs.ngModel;\r\n                if (modelo === null || modelo === undefined || modelo === '') {\r\n                    throw \"mm-input Requiere obligatoriamente ngModel\";\r\n                }\r\n\r\n                var placeholder = attrs.placeholder !== undefined ? attrs.placeholder : '';\r\n\r\n                var extraAttrs = \"\";\r\n                var required = attrs.required;\r\n                var readonly = attrs.readonly;\r\n                if (required !== undefined && required === true) {\r\n                    extraAttrs += \"required \"\r\n                }\r\n\r\n                if (angular.isString(readonly)) {\r\n                    if (readonly !== undefined && (readonly === \"\" || readonly === \"true\")) {\r\n                        extraAttrs += \"readonly \";\r\n                    }\r\n                }\r\n\r\n                var template = angular.element(\r\n                    '<div class=\"form-group\" style=\"padding-top:5px;' + estilo + '\">' +\r\n                    '<div class=\"input-group\">' +\r\n                    // '<input id=\"txt_' + modelo + '\" type=\"' + tipo + '\" ng-model=\"' + modelo + '\" name=\"txt_' + modelo + '\" value=\"\" onchange=\"this.setAttribute(\"value\", this.value);\" class=\"form-control\" />' +\r\n                    '<textarea id=\"txt_' + modelo + '\" ng-model=\"' + modelo + '\" name=\"txt_' + modelo + '\" value=\"{{' + modelo + '}}\" class=\"form-control\" ' + extraAttrs + '></textarea>' +\r\n                    '<label for=\"txt_' + modelo + '\">' + placeholder + '</label>' +\r\n                    '</div>' +\r\n                    '</div>');\r\n\r\n                var textarea = template[0].firstChild.firstChild;\r\n                textarea.onkeyup = function (evt) {\r\n                    this.style.height = \"4px\";\r\n                    this.style.height = (this.scrollHeight + 10) + 'px';\r\n                    // this.style.height = (this.scrollHeight + 10) + 'px';\r\n                };\r\n\r\n                textarea.onkeydown = function (evt) {\r\n                    this.style.height = \"4px\";\r\n                    this.style.height = (this.scrollHeight + 10) + 'px';\r\n                    // this.style.height = \"auto\";\r\n                    // if (this.scrollHeight > 29 ) {\r\n                    //     this.style.height = (this.scrollHeight + 10) + 'px';\r\n                    // }\r\n                }\r\n\r\n                $compile(template)(scope);\r\n                elemento.append(template);\r\n                // elemento.replaceWith(template);\r\n            }\r\n        }\r\n    }\r\n}]);","miniapp.directive('mmLoader', ['$compile', function ($compile) {\r\n    return {\r\n        terminal: true,\r\n        scope: false,\r\n        restrict: 'E',\r\n        compile: function (tElement, tAttrs) {\r\n            return function Linked(scope, elemento, attrs) {\r\n                var ancho = attrs.width;\r\n                var alto = attrs.height;\r\n                if (ancho === undefined &&\r\n                    alto === undefined) {\r\n                    ancho = '50px';\r\n                    alto = '50px';\r\n                }\r\n                if (ancho === undefined && alto !== undefined) {\r\n                    ancho = alto;\r\n                } else if (alto === undefined && ancho !== undefined) {\r\n                    alto = ancho;\r\n                }\r\n\r\n                var modelo = attrs.ngModel;\r\n                if (modelo === null || modelo === undefined || modelo === '') {\r\n                    throw \"mm-loader Requiere obligatoriamente ngModel\";\r\n                }\r\n\r\n                var stroke = attrs.strokeWidth !== undefined ? attrs.strokeWidth : 6;\r\n\r\n                var template = angular.element(\r\n                    '<div class=\"spinner-container\" ng-if=\"' + modelo + '\">' +\r\n                    '<svg class=\"spinner\" width= \"' + ancho + '\" height= \"' + alto + '\" viewBox= \"0 0 66 66\" xmlns= \"http://www.w3.org/2000/svg\">' +\r\n                    '<circle class=\"path\" fill=\"none\" stroke-width=\"' + stroke + '\" stroke-linecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\"></circle>' +\r\n                    '</svg >' +\r\n                    '</div >');\r\n                $compile(template)(scope);\r\n                elemento.replaceWith(template);\r\n            };\r\n        }\r\n    };\r\n}]);","miniapp.service('$mmSnackbar', [function () {\r\n    var body = angular.element(document.body);\r\n    var time = 3000;\r\n\r\n    var wrapper = angular.element('<div class=\"snackbar-wrapper\" id=\"snack1\"><div>');\r\n    body.append(wrapper);\r\n\r\n    function CreateSnackbar(tpl) {\r\n        wrapper.append(tpl);\r\n        // tpl.removeClass('hide');\r\n        tpl.addClass('show');\r\n        setTimeout(function () {\r\n            tpl.addClass('hide');\r\n            // tpl.removeClass('show');\r\n        }, time);\r\n\r\n        setTimeout(function () {\r\n            tpl.remove();\r\n        }, time + 450);\r\n    }\r\n\r\n    function CreateStyle(sty) {\r\n        body.append(\r\n            '<style type=\"text/css\">' + sty + '</style>'\r\n        );\r\n    }\r\n\r\n    return {\r\n        success: function (message) {\r\n            var template = angular.element(\r\n                '<div class=\"snackbar snackbar-success\">' + message +\r\n                '</div>'\r\n            );\r\n            CreateSnackbar(template);\r\n        },\r\n        info: function (message) {\r\n            var template = angular.element(\r\n                '<div class=\"snackbar snackbar-info\">' + message +\r\n                '</div>'\r\n            );\r\n            CreateSnackbar(template);\r\n        },\r\n        warning: function (message) {\r\n            var template = angular.element(\r\n                '<div class=\"snackbar snackbar-warning\">' + message +\r\n                '</div>'\r\n            );\r\n            CreateSnackbar(template);\r\n        },\r\n        error: function (message) {\r\n            var template = angular.element(\r\n                '<div class=\"snackbar snackbar-error\">' + message +\r\n                '</div>'\r\n            );\r\n            CreateSnackbar(template);\r\n        },\r\n        setTime: function (tiempo) {\r\n            time = tiempo;\r\n            return this;\r\n        },\r\n        setPosition: function (position) {\r\n            position = position.toLowerCase();\r\n            switch (position) {\r\n                case \"bottom-left\":\r\n                    CreateStyle('.snackbar-wrapper { bottom: 30px; left:30px; margin:0; }');\r\n                    break;\r\n                case \"bottom-right\":\r\n                    CreateStyle('.snackbar-wrapper { bottom: 30px; right:30px; margin:0; }');\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}]);","miniapp.directive('mmSwitch', ['$compile', function ($compile) {\r\n    return {\r\n        terminal: true,\r\n        scope: false,\r\n        restrict: 'E',\r\n        // require: '?ngModel',\r\n        compile: function (tElement, tAttrs) {\r\n            return function Linked(scope, elemento, attrs) {\r\n                var estilo = attrs.style !== undefined ? attrs.style : '';\r\n\r\n                var modelo = attrs.ngModel;\r\n                if (modelo === null || modelo === undefined || modelo === '') {\r\n                    throw \"mm-switch Requiere obligatoriamente ngModel\";\r\n                }\r\n\r\n                var label = attrs.label !== undefined ? attrs.label : '';\r\n\r\n                var template = angular.element(\r\n                    '<div class=\"mmswitch-container\">' +\r\n                    '<click style=\"cursor:pointer;\" ng-click=\"' + modelo + '=!' + modelo + '\">' + label + '</click>' +\r\n                    '<div class=\"mmswitch\" >' +\r\n                    '<input id=\"sw_' + modelo + '\" ng-model=\"' + modelo + '\" type=\"checkbox\" />' +\r\n                    '<label for=\"sw_' + modelo + '\" class=\"label-primary\"></label>' +\r\n                    '</div >' +\r\n                    '</div >'\r\n                );\r\n\r\n                $compile(template)(scope);\r\n                elemento.replaceWith(template);\r\n            }\r\n        }\r\n    }\r\n}]);"]}